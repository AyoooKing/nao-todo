import { p as e, b as a, w as o } from "./utils-D3GAsA1N.js";
import { defineComponent as t, ref as l, computed as i, watch as s, nextTick as n, openBlock as r, createBlock as u, Teleport as d, createElementBlock as m, normalizeStyle as c, createElementVNode as f, normalizeClass as p, renderSlot as h, createVNode as w, withCtx as v, createTextVNode as _, toDisplayString as b, createCommentVNode as g } from "vue";
import { _ as y } from "./button-y8Aj-aBT.js";
import { _ as V } from "./text-TjewgIQ-.js";
const C = { class: "nue-dialog__header" }, j = { class: "nue-dialog__content" }, k = { class: "nue-dialog__footer" }, x = o(t({ name: "NueDialog", __name: "dialog", props: { title: { default: "Dialog Title" }, modelValue: { type: Boolean }, width: {}, minWidth: {}, theme: {}, closable: { type: Boolean, default: true }, beforeConfirm: {} }, emits: ["update:modelValue", "confirm"], setup(o2, { expose: t2, emit: x2 }) {
  const W = o2, $ = x2, B = l(), D = i(() => {
    const { theme: a2 } = W, o3 = "nue-dialog";
    let t3 = [o3];
    return a2 && (t3 = t3.concat(e(a2, o3))), t3;
  }), N = i(() => {
    const { width: e2, minWidth: a2 } = W;
    return { "--aside-width": e2, "--aside-min-width": a2 };
  });
  async function P() {
    const { closable: e2 } = W;
    if (e2) return await new Promise((e3) => {
      B.value && (B.value.dataset.open = "false", setTimeout(() => e3(true), 240));
    }), $("update:modelValue", false), true;
  }
  async function T() {
    if (a(W.beforeConfirm)) try {
      await new Promise((e2) => {
        var _a;
        return (_a = W.beforeConfirm) == null ? void 0 : _a.call(null, () => e2(null));
      });
    } catch (e2) {
      throw new Error(e2);
    }
    $("confirm"), await P();
  }
  return s(() => W.modelValue, (e2) => {
    e2 && n(() => {
      requestAnimationFrame(() => {
        B.value && (B.value.dataset.open = "true");
      });
    });
  }), t2({ close: P }), (e2, a2) => (r(), u(d, { to: "body" }, [e2.modelValue ? (r(), m("div", { key: 0, ref_key: "dialogWrapperRef", ref: B, style: c(N.value), class: "nue-dialog-wrapper" }, [f("div", { class: p(D.value) }, [f("div", C, [h(e2.$slots, "header", { close: P }, () => [w(V, null, { default: v(() => [_(b(e2.title), 1)]), _: 1 }), w(y, { disabled: !e2.closable, icon: "clear", theme: "pure", onClick: P }, null, 8, ["disabled"])])]), f("div", j, [h(e2.$slots, "default")]), f("div", k, [h(e2.$slots, "footer", { cancel: P, confirm: T })])], 2)], 4)) : g("", true)]));
} }));
export {
  x as N
};
