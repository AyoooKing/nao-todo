import { p as e, f as r, w as t } from "./utils-D3GAsA1N.js";
import { defineComponent as s, computed as a, openBlock as l, createElementBlock as o, normalizeClass as n, normalizeStyle as u, createElementVNode as c, createBlock as i, unref as p, withCtx as d, createTextVNode as f, toDisplayString as h, createCommentVNode as v } from "vue";
import { N as y } from "./text-TjewgIQ-.js";
const g = { key: 0, class: "nue-progress--line" }, m = { class: "nue-progress__outer-bar" }, x = t(s({ name: "NueProgress", __name: "progress", props: { type: { default: "line" }, percentage: { default: 0 }, color: { default: "var(--primary-color-600)" }, strokeWidth: { default: 6 }, formatter: { type: Function, default: (e2) => e2 }, showInnerText: { type: Boolean, default: false }, hideText: { type: Boolean, default: false }, scale: { default: 1 }, theme: {} }, emits: ["full"], setup(t2, { emit: s2 }) {
  const x2 = t2, _ = s2, k = a(() => {
    const { percentage: e2 } = x2;
    return e2 < 0 ? "0%" : (100 === e2 && _("full"), e2 > 100 ? "100%" : e2 + "%");
  }), w = a(() => x2.strokeWidth * x2.scale + "px"), T = a(() => {
    const { theme: r2 } = x2, t3 = "nue-progress", s3 = [];
    return s3.push(t3), r2 && s3.concat(e(r2, t3)), s3;
  }), I = a(() => {
    const { type: e2, color: t3 } = x2;
    switch (e2) {
      case "line":
        return r(t3) ? `linear-gradient(to right, ${t3.join(", ")})` : t3;
      case "circle":
        return r(t3) ? t3[0] : t3;
      default:
        return;
    }
  }), b = a(() => {
    const { type: e2 } = x2;
    return { "--stroke-width": w.value, "--flex": "line" === e2 ? "auto" : "none", "--inner-bar-background-color": I.value };
  }), j = a(() => Math.ceil(2 * Math.PI * 50)), B = a(() => ({ "--circle-size": 100 * x2.scale + "px", "--stroke-dash-array": j.value, "--stroke-dash-offset": Math.ceil((1 - parseInt(k.value) / 100) * j.value) }));
  return (e2, r2) => (l(), o("div", { class: n(T.value), style: u(b.value) }, ["line" === e2.type ? (l(), o("div", g, [c("div", m, [c("div", { style: u({ width: k.value }), class: "nue-progress__inner-bar" }, [e2.showInnerText && !e2.hideText ? (l(), i(p(y), { key: 0 }, { default: d(() => [f(h(k.value), 1)]), _: 1 })) : v("", true)], 4)])])) : "circle" === e2.type ? (l(), o("svg", { key: 1, style: u(B.value), class: "nue-progress--circle", viewBox: "0 0 100 100" }, r2[0] || (r2[0] = [c("circle", { class: "nue-progress__outer-path", cx: "50", cy: "50", r: "50" }, null, -1), c("circle", { class: "nue-progress__inner-path", cx: "50", cy: "50", r: "50" }, null, -1)]), 4)) : v("", true), e2.showInnerText || e2.hideText ? v("", true) : (l(), i(p(y), { key: 2, class: "nue-progress__text" }, { default: d(() => [f(h(e2.formatter(k.value)), 1)]), _: 1 }))], 6));
} }));
export {
  x as N
};
