import { ref as e, watchEffect as l, provide as t, defineComponent as a, computed as s, openBlock as o, createElementBlock as u, normalizeClass as n, renderSlot as c, inject as i, watch as p, onMounted as m, onUpdated as d, resolveComponent as r, withDirectives as v, createElementVNode as h, toDisplayString as f, createVNode as _, createBlock as y, withCtx as I, createTextVNode as g, createCommentVNode as x, vShow as V } from "vue";
import { p as A, g as C, w as k } from "./utils-D3GAsA1N.js";
import { _ as E } from "./button-y8Aj-aBT.js";
const $ = "CollpaseContextKey", w = a({ name: "NueCollapse", __name: "collapse", props: { modelValue: {}, accordion: { type: Boolean, default: false }, theme: {} }, emits: ["update:modelValue"], setup(a2, { expose: i2, emit: p2 }) {
  const m2 = p2, d2 = a2, { activedItems: r2, pushActivedItem: v2 } = function(a3, s2) {
    const o2 = e([]);
    function u2(e2) {
      o2.value = e2;
      const l2 = a3.accordion ? o2.value[0] : o2.value;
      s2("update:modelValue", l2);
    }
    function n2(e2) {
      if (a3.accordion) return void u2([o2.value[0] === e2 ? "" : e2]);
      const l2 = [...o2.value], t2 = l2.indexOf(e2);
      t2 > -1 ? l2.splice(t2, 1) : l2.push(e2), u2(l2);
    }
    return l(() => {
      a3.modelValue && (Array.isArray(a3.modelValue) ? u2(a3.accordion ? [a3.modelValue[0]] : a3.modelValue) : u2([a3.modelValue]));
    }), t($, { activedItems: o2, pushActivedItem: n2 }), { activedItems: o2, pushActivedItem: n2 };
  }(d2, m2), h2 = s(() => {
    const { theme: e2 } = d2;
    let l2 = [];
    const t2 = "nue-collapse";
    return l2.push(t2), e2 && (l2 = l2.concat(A(e2, t2))), l2;
  });
  return i2({ activedItems: r2, pushActivedItem: v2 }), (e2, l2) => (o(), u("div", { class: n(h2.value) }, [c(e2.$slots, "default")], 2));
} }), N = ["data-collapse"], W = { class: "nue-collapse-item__header" }, b = { class: "nue-collapse-item__title" }, j = a({ name: "NueCollapseItem", __name: "collapse-item", props: { title: { default: "" }, name: {}, hideWhenEmpty: { type: Boolean, default: false } }, setup(l2, { expose: t2 }) {
  const a2 = l2, { activedItems: n2, pushActivedItem: A2 } = i($, {}), k2 = e(), w2 = e(), j2 = e(false), B2 = e(), H2 = s(() => a2.name || C()), R = s(() => !n2.value.includes(H2.value));
  function T() {
    A2(H2.value);
  }
  function z() {
    k2.value && (k2.value.style.height = k2.value.scrollHeight + "px", k2.value.scrollHeight, R.value ? (B2.value && clearTimeout(B2.value), k2.value.style.height = "0px") : B2.value = setTimeout(() => k2.value.style.height = "auto", 300));
  }
  function K() {
    a2.hideWhenEmpty && w2.value ? j2.value = 0 === w2.value.children.length : j2.value = false;
  }
  return p(() => R.value, () => z()), m(() => {
    z(), K();
  }), d(() => {
    K();
  }), t2({ name: H2, isCollapsed: R, handleCollapse: T }), (e2, l3) => {
    const t3 = r("nue-text");
    return v((o(), u("div", { "data-collapse": R.value, class: "nue-collapse-item" }, [h("div", W, [c(e2.$slots, "header", { collapse: T, state: R.value }, () => [h("div", b, [c(e2.$slots, "title", {}, () => [h("span", null, f(e2.title), 1)])]), _(E, { class: "nue-collapse-item__toggle-button", icon: "arrow-down", theme: "pure", onClick: T })])]), h("div", { ref_key: "contentRef", ref: k2, class: "nue-collapse-item__content" }, [h("div", { ref_key: "contentInnerRef", ref: w2, class: "nue-collapse-item__inner" }, [c(e2.$slots, "default", {}, () => [e2.hideWhenEmpty ? x("", true) : (o(), y(t3, { key: 0, class: "nue-collapse-item__empty", color: "gray", size: "12px" }, { default: I(() => l3[0] || (l3[0] = [g(" Empty ")])), _: 1 }))])], 512)], 512)], 8, N)), [[V, !j2.value]]);
  };
} }), B = k(w), H = k(j);
export {
  B as N,
  H as a
};
