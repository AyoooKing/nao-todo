import { g as e, p as t, w as a } from "./utils-D3GAsA1N.js";
import { defineComponent as s, computed as i, provide as n, openBlock as l, createElementBlock as o, normalizeClass as d, normalizeStyle as u, renderSlot as r, createCommentVNode as c, ref as h, reactive as m, createElementVNode as p } from "vue";
const v = Symbol("nueContainerContext"), f = ["id"], _ = s({ name: "NueContainer", __name: "container", props: { id: { default: e() }, height: {}, width: {}, theme: { default: "vertical" } }, setup(e2) {
  const a2 = e2, s2 = i(() => {
    const { theme: e3 } = a2, s3 = "nue-container";
    let i2 = [s3];
    return e3 && (i2 = i2.concat(t(e3, s3))), i2;
  }), c2 = i(() => {
    const { height: e3, width: t2 } = a2;
    return { "--nue-container-width": t2, "--nue-container-height": e3 };
  });
  return n(v, { containerId: i(() => a2.id) }), (e3, t2) => (l(), o("section", { class: d(s2.value), id: e3.id, style: u(c2.value) }, [r(e3.$slots, "default")], 14, f));
} }), w = { key: 0, class: "nue-header__slot nue-header__logo" }, y = { key: 1, class: "nue-header__slot nue-header__navigators" }, $ = { key: 2, class: "nue-header__slot nue-header__actions" }, g = { key: 3, class: "nue-header__slot nue-header__user" }, W = s({ name: "NueHeader", __name: "header", props: { width: {}, height: {}, theme: {} }, setup(e2) {
  const a2 = e2, s2 = i(() => {
    const { theme: e3 } = a2, s3 = "nue-header";
    let i2 = [s3];
    return e3 && (i2 = i2.concat(t(e3, s3))), i2;
  }), n2 = i(() => {
    const { width: e3, height: t2 } = a2;
    return { "--nue-header-width": e3, "--nue-header-height": t2 };
  });
  return (e3, t2) => (l(), o("header", { class: d(s2.value), style: u(n2.value) }, [e3.$slots.logo ? (l(), o("div", w, [r(e3.$slots, "logo")])) : c("", true), e3.$slots.nav || e3.$slots.navigators ? (l(), o("nav", y, [r(e3.$slots, "nav"), r(e3.$slots, "navigators")])) : c("", true), r(e3.$slots, "default"), e3.$slots.ops || e3.$slots.actions ? (l(), o("div", $, [r(e3.$slots, "ops"), r(e3.$slots, "actions")])) : c("", true), e3.$slots.user ? (l(), o("div", g, [r(e3.$slots, "user")])) : c("", true)], 6));
} }), x = ["data-visible", "data-collapse"], z = { class: "nue-main__aside" }, b = ["data-actived"], M = { key: 1, class: "nue-main__content" }, C = ["data-visible", "data-collapse"], k = ["data-actived"], R = { class: "nue-main__outline" }, E = s({ name: "NueMain", __name: "main", props: { responsive: { type: Boolean }, asideWidth: { default: "256px" }, asideMinWidth: { default: "128px" }, asideMaxWidth: { default: "512px" }, allowResizeAside: { type: Boolean, default: true }, allowCollapseAside: { type: Boolean, default: true }, allowHideAside: { type: Boolean, default: true }, outlineWidth: { default: "256px" }, outlineMinWidth: { default: "128px" }, outlineMaxWidth: { default: "512px" }, allowResizeOutline: { type: Boolean, default: true }, allowCollapseOutline: { type: Boolean, default: true }, allowHideOutline: { type: Boolean, default: true }, theme: {} }, emits: ["after-aside-resize", "after-outline-resize"], setup(e2, { emit: a2 }) {
  const s2 = e2, n2 = a2, v2 = h(), f2 = h(), _2 = h(), w2 = h(false), y2 = m({ visible: true, float: false, collapse: false }), $2 = m({ visible: true, float: false, collapse: false });
  let g2 = "aside", W2 = 0, E2 = 0;
  const A2 = i(() => {
    const { theme: e3 } = s2, a3 = "nue-main";
    let i2 = [a3];
    return e3 && (i2 = i2.concat(t(e3, a3))), w2.value && i2.push(`${a3}--resizing`), i2;
  }), B2 = i(() => {
    const { asideWidth: e3, asideMinWidth: t2, asideMaxWidth: a3, outlineWidth: i2, outlineMinWidth: n3, outlineMaxWidth: l2 } = s2;
    return { "--nue-main-aside-width": e3, "--nue-main-aside-min-width": t2, "--nue-main-aside-max-width": a3, "--nue-main-outline-width": i2, "--nue-main-outline-min-width": n3, "--nue-main-outline-max-width": l2 };
  }), O2 = (e3) => {
    if (g2 = e3.target.dataset.target || "aside", "outline" === g2 && !s2.allowResizeOutline) return;
    if ("aside" === g2 && !s2.allowResizeAside) return;
    w2.value = true, W2 = e3.clientX;
    const t2 = "outline" === g2 ? _2 : f2;
    E2 = parseInt(window.getComputedStyle(t2.value).width);
    const a3 = "aside" === g2 ? N : S;
    document.documentElement.addEventListener("mousemove", a3), document.documentElement.addEventListener("mouseup", H2);
  }, H2 = () => {
    const e3 = "aside" === g2 ? N : S;
    document.documentElement.removeEventListener("mousemove", e3), document.documentElement.removeEventListener("mouseup", H2), w2.value = false, document.body.style.cursor = "default", "aside" === g2 ? n2("after-aside-resize", { oldWidth: E2, newWidth: parseInt(window.getComputedStyle(f2.value).width) }) : n2("after-outline-resize", { oldWidth: E2, newWidth: parseInt(window.getComputedStyle(_2.value).width) });
  }, I2 = (e3) => {
    if (e3 = e3.trim(), !v2.value || !e3.endsWith("%")) return parseInt(e3);
    const t2 = parseFloat(e3) / 100;
    return v2.value.clientWidth * t2;
  }, N = (e3) => {
    const { clientX: t2 } = e3;
    document.body.style.cursor = "ew-resize", L(E2 + (t2 - W2));
  }, L = (e3) => {
    const { asideMinWidth: t2, asideMaxWidth: a3, allowCollapseAside: i2, allowHideAside: n3 } = s2, l2 = I2(t2);
    if (!(e3 >= I2(a3))) {
      if (f2.value.style.width = e3 + "px", n3) {
        const t3 = e3 <= 24;
        if (y2.visible = !t3, t3) return y2.collapse = false;
      }
      if (i2) {
        const t3 = e3 <= l2;
        if (y2.collapse = t3, t3) return;
      }
    }
  }, S = (e3) => {
    const { clientX: t2 } = e3;
    document.body.style.cursor = "ew-resize", X(E2 + (W2 - t2));
  }, X = (e3) => {
    const { outlineMinWidth: t2, outlineMaxWidth: a3, allowCollapseOutline: i2, allowHideOutline: n3 } = s2, l2 = I2(t2);
    if (!(e3 >= I2(a3))) {
      if (_2.value.style.width = e3 + "px", n3) {
        const t3 = e3 <= 24;
        if ($2.visible = !t3 && n3, t3) return $2.collapse = false;
      }
      if (i2) {
        const t3 = e3 <= l2;
        if ($2.collapse = t3 && i2, t3) return;
      }
    }
  };
  return (e3, t2) => (l(), o("main", { ref_key: "mainRef", ref: v2, class: d(A2.value), style: u(B2.value) }, [e3.$slots.aside ? (l(), o("div", { key: 0, ref_key: "asideRef", ref: f2, class: "nue-main__aside-wrapper", "data-visible": y2.visible, "data-collapse": y2.collapse }, [p("aside", z, [r(e3.$slots, "aside")]), p("div", { class: "nue-main__resizer", onMousedownCapture: O2 }, [p("div", { class: "nue-main__resizer__line", "data-target": "aside", "data-actived": e3.allowResizeAside }, null, 8, b)], 32)], 8, x)) : c("", true), e3.$slots.default || e3.$slots.content ? (l(), o("div", M, [r(e3.$slots, "default"), r(e3.$slots, "content")])) : c("", true), e3.$slots.outline ? (l(), o("div", { key: 2, ref_key: "outlineRef", ref: _2, class: "nue-main__outline-wrapper", "data-visible": $2.visible, "data-collapse": $2.collapse }, [p("div", { class: "nue-main__resizer", onMousedownCapture: O2 }, [p("div", { class: "nue-main__resizer__line", "data-target": "outline", "data-actived": e3.allowResizeOutline }, null, 8, k)], 32), p("aside", R, [r(e3.$slots, "outline")])], 8, C)) : c("", true), r(e3.$slots, "columns")], 6));
} }), A = s({ name: "NueFooter", __name: "footer", props: { width: {}, height: {}, theme: {} }, setup(e2) {
  const a2 = e2, s2 = i(() => {
    const { theme: e3 } = a2, s3 = "nue-footer";
    let i2 = [s3];
    return e3 && (i2 = i2.concat(t(e3, s3))), i2;
  });
  return (e3, t2) => (l(), o("footer", { class: d(s2.value) }, [r(e3.$slots, "default")], 2));
} }), B = a(_), O = a(W), H = a(E), I = a(A);
export {
  B as N,
  O as a,
  H as b,
  I as c
};
