import { p as e, w as t } from "./utils-D3GAsA1N.js";
import { defineComponent as a, computed as l, openBlock as s, createBlock as o, resolveDynamicComponent as r, normalizeClass as n, normalizeStyle as c, withCtx as m, renderSlot as u } from "vue";
const i = { small: "0.9rem", normal: "1rem", large: "1.2rem", xlarge: "1.5rem" }, p = a({ name: "NueText", __name: "text", props: { theme: {}, tag: { default: "span" }, size: {}, color: {}, decoration: {}, weight: {}, align: {}, clamped: {} }, setup(t2) {
  const a2 = t2, p2 = l(() => {
    const { size: e2 } = a2;
    return e2 ? i[e2] || e2 : null;
  }), d2 = l(() => {
    const { color: e2, decoration: t3, weight: l2, align: s2, clamped: o2 } = a2;
    return { "--color": e2, "--font-size": p2.value, "--font-weight": l2, "--text-decoration": t3, "--text-align": s2, "--clamped-lines": o2 };
  }), g = l(() => {
    const { theme: t3, clamped: l2 } = a2, s2 = "nue-text";
    let o2 = [];
    return o2.push(s2), t3 && (o2 = o2.concat(e(t3, s2))), l2 && o2.push(`${s2}--clamped`), o2;
  });
  return (e2, t3) => (s(), o(r(e2.tag), { class: n(g.value), style: c(d2.value) }, { default: m(() => [u(e2.$slots, "default")]), _: 3 }, 8, ["class", "style"]));
} }), d = t(p);
export {
  d as N,
  p as _
};
