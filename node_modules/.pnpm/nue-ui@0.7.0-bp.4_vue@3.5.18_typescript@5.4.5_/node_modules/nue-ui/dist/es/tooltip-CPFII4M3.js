import { p as e, w as o } from "./utils-D3GAsA1N.js";
import { nextTick as t, defineComponent as l, ref as n, computed as i, openBlock as a, createElementBlock as s, renderSlot as p, createBlock as c, Teleport as d, normalizeClass as u, normalizeStyle as r, createElementVNode as v, toDisplayString as m, createCommentVNode as h } from "vue";
import { u as f, a as w } from "./hooks-C1UjnUZ1.js";
let T = null;
const y = () => {
  T && T.classList.add("nue-tooltip-pool--actived");
}, P = () => {
  t(() => {
    T && (T.children.length || T.classList.remove("nue-tooltip-pool--actived"));
  });
};
function _() {
  return !!document.getElementById("NueTooltipPool") || (() => {
    const e2 = document.createElement("div");
    e2.classList.add("nue-tooltip-pool"), e2.id = "NueTooltipPool", document.body.appendChild(e2), T = e2;
  })(), { tooltipPool: T, activeTooltipPool: y, deactiveTooltipPool: P };
}
const g = ["data-direction"], N = ["data-direction"], $ = { class: "nue-tooltip__text" }, k = l({ name: "NueTooltip", __name: "tooltip", props: { content: { default: "No content." }, placement: { default: "top-center" }, size: {}, showTriangle: { type: Boolean }, theme: {} }, setup(o2) {
  const t2 = o2, l2 = n(false), T2 = n(), y2 = n(), { activeTooltipPool: P2, deactiveTooltipPool: k2 } = _(), { placement: L2, calculatePosition: E } = f(T2, y2, { placement: t2.placement }), { show: M, hide: b } = w(l2), j = i(() => {
    const { theme: o3, size: l3 } = t2, n2 = "nue-tooltip";
    let i2 = [n2];
    return o3 && (i2 = i2.concat(e(o3, n2))), l3 && i2.push(`${n2}--${l3}`), L2.value && i2.push(`${n2}--${L2.value}`), i2;
  }), x = i(() => {
    const { showTriangle: e2 } = t2;
    return { "--triangle-display": e2 ? "block" : void 0 };
  }), z = i(() => {
    const e2 = L2.value.split("-");
    return { direction: e2[0] || "top", alignment: e2[1] || "center" };
  }), B = () => {
    M(void 0, () => {
      E(t2.placement), P2(), window.addEventListener("wheel", R);
    });
  }, R = () => {
    b(160, () => {
      y2.value && (y2.value.style.animationName = "slide-fade-out");
    }, () => {
      k2(), window.removeEventListener("wheel", R);
    });
  };
  return (e2, o3) => (a(), s("div", { ref_key: "tooltipWrapperRef", ref: T2, class: "nue-tooltip-wrapper", onMouseenter: B, onMouseleave: R }, [p(e2.$slots, "default"), (a(), c(d, { to: "#NueTooltipPool" }, [l2.value ? (a(), s("div", { key: 0, ref_key: "tooltipRef", ref: y2, class: u(j.value), "data-direction": z.value.direction, style: r(x.value), onMouseenter: B, onMouseleave: R }, [v("div", { "data-direction": z.value.direction, class: "nue-tooltip__padding" }, null, 8, N), p(e2.$slots, "content", {}, () => [v("span", $, m(e2.content), 1)])], 46, g)) : h("", true)]))], 544));
} }), L = o(k);
export {
  L as N
};
