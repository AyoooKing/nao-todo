import { g as e, w as n } from "./utils-D3GAsA1N.js";
import { defineComponent as a, ref as s, computed as t, watch as l, onMounted as u, openBlock as o, createElementBlock as r, normalizeClass as i, createBlock as d, createCommentVNode as c, createElementVNode as m, toDisplayString as p, createVNode as v, render as g, onBeforeUnmount as f } from "vue";
import { _ as y } from "./icon-DKepx2gf.js";
const h = a({ name: "MessageNode", __name: "message-inner", props: { wrapper: {}, node: {}, icon: {}, type: { default: "info" }, size: {}, message: { default: "" }, duration: { default: 3e3 } }, setup(e2) {
  const n2 = e2, a2 = s(), v2 = s(null), g2 = t(() => {
    const { size: e3 } = n2;
    let a3 = ["nue-message-node-inner"];
    return a3.push(`type--${n2.type}`), e3 && a3.push(`nue-message-node-inner--${e3}`), a3;
  });
  function f2(e3, n3) {
    v2.value = setTimeout(e3, n3);
  }
  function h2() {
    const { node: e3, wrapper: s2 } = n2;
    a2.value.classList.remove("nue-message-node-inner--push"), f2(() => T(e3, s2), 500);
  }
  return l(() => v2.value, (e3, n3) => {
    n3 && clearTimeout(n3);
  }), u(() => {
    a2.value.style.marginTop = 0 - 2 * a2.value.clientHeight + "px", f2(() => {
      a2.value.classList.add("nue-message-node-inner--push"), n2.duration && f2(h2, n2.duration);
    }, 0);
  }), (e3, n3) => (o(), r("div", { ref_key: "nodeInnerRef", ref: a2, class: i(g2.value) }, [e3.icon ? (o(), d(y, { key: 0, name: e3.icon }, null, 8, ["name"])) : c("", true), m("span", null, p(e3.message), 1), e3.duration ? c("", true) : (o(), d(y, { key: 1, name: "clear", style: { cursor: "pointer" }, onClick: h2 }))], 2));
} }), w = s(null), _ = s(null), k = s([]), x = s();
let E = 0;
function T(e2, n2) {
  E = x.value ? E + 24 : 0, x.value = setTimeout(() => {
    try {
      n2.removeChild(e2), 0 === n2.children.length && (document.getElementById(n2.id) || "external" !== n2.dataset.type || (_.value = null, w.value = null));
    } catch (e3) {
      return e3;
    }
  }, E);
}
function C(n2) {
  if (!w.value) if (_.value) w.value = _.value;
  else {
    let n3 = document.getElementById("app");
    n3 || (n3 = document.getElementsByTagName("body")[0]), n3.style.position = "relative", w.value = function(n4) {
      let a3 = null;
      if (_.value) a3 = _.value;
      else {
        a3 = document.createElement("div");
        const s3 = e();
        a3.id = `nue-message-wrapper--${s3}`, a3.dataset.type = "external", a3.classList.add("nue-message"), n4.appendChild(a3), _.value = a3;
      }
      return a3;
    }(n3);
  }
  const a2 = document.createElement("div");
  a2.classList.add("nue-message-node"), w.value.appendChild(a2);
  const s2 = v(h, { ...n2, node: a2, wrapper: w.value });
  g(s2, a2);
}
C.success = (e2, n2, a2) => {
  C({ message: e2, type: "success", duration: n2, icon: a2 });
}, C.error = (e2, n2, a2) => {
  C({ message: e2, type: "error", duration: n2, icon: a2 });
}, C.warn = (e2, n2, a2) => {
  C({ message: e2, type: "warning", duration: n2, icon: a2 });
}, C.info = (e2, n2, a2) => {
  C({ message: e2, type: "info", duration: n2, icon: a2 });
}, C.log = (e2, n2, a2) => {
  C({ message: e2, type: "log", duration: n2, icon: a2 });
};
const L = n(a({ name: "NueMessageWrapper", __name: "message-wrapper", setup(e2) {
  const n2 = s(), a2 = s(() => {
  });
  return u(() => {
    var e3;
    a2.value = (e3 = n2.value, w.value = e3, k.value.push(e3), () => {
      w.value = null;
      const n3 = [...k.value];
      n3.splice(k.value.indexOf(e3), 1), k.value = n3;
    });
  }), f(() => {
    a2.value.call(void 0);
  }), (e3, a3) => (o(), r("div", { ref_key: "messageRef", ref: n2, class: "nue-message" }, null, 512));
} })), N = C;
export {
  L as N,
  N as a
};
