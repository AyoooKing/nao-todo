import { w as e, a as t, c as r, p as i } from "./utils-D3GAsA1N.js";
import { defineComponent as n, computed as o, openBlock as l, createElementBlock as d, normalizeClass as s, normalizeStyle as u, createElementVNode as a, renderSlot as c, createTextVNode as v, toDisplayString as p, createCommentVNode as f, createVNode as g } from "vue";
const h = { key: 0, class: "nue-divider__text" }, y = { class: "nue-divider__text__inner" }, b = e(n({ name: "NueDivider", __name: "divider", props: { direction: { default: "horizontal" }, text: {}, align: {}, borderWidth: {}, borderType: {}, borderColor: {}, vertical: { type: Boolean, default: false } }, setup(e2) {
  const t2 = e2, r2 = o(() => {
    const e3 = "nue-divider", { direction: r3 } = t2;
    let i3 = [e3];
    return i3.push(`${e3}--${r3}`), i3;
  }), i2 = o(() => {
    const { borderType: e3, borderWidth: r3, borderColor: i3, align: n2 } = t2;
    return { "--border-width": r3, "--border-type": e3, "--border-color": i3, "--justify-content": n2 };
  });
  return (e3, t3) => (l(), d("div", { class: s(r2.value), style: u(i2.value) }, [t3[0] || (t3[0] = a("div", { class: "nue-divider__line" }, null, -1)), e3.$slots.default || e3.text ? (l(), d("div", h, [a("span", y, [c(e3.$slots, "default", {}, () => [v(p(e3.text), 1)])])])) : f("", true)], 6));
} })), m = e(n({ name: "NueDiv", props: { direction: String, vertical: Boolean, align: String, justify: String, flex: String, wrap: String, gap: String, width: String, height: String, divider: { type: [String, Number, Boolean, Object], default: null }, theme: [String, Array] }, setup(e2, { slots: n2 }) {
  function l2() {
    const { direction: t2, vertical: r2 } = e2;
    return t2 || (r2 ? "column" : "row");
  }
  const d2 = o(() => {
    const { align: i2, justify: n3, flex: o2, wrap: d3, gap: s3, width: u2, height: a2 } = e2;
    return { "--flex-direction": l2(), "--align-items": i2, "--justify-content": n3, "--flex": t(o2), "--flex-wrap": r(d3), "--gap": s3, "--width": u2, "--height": a2 };
  }), s2 = o(() => {
    const t2 = [], { theme: r2 } = e2;
    return t2.push("nue-div"), r2 && t2.push(...i(r2, "nue-div")), t2;
  });
  return () => {
    const t2 = { class: s2.value, style: d2.value };
    if (null !== e2.divider) {
      const o2 = (r2 = n2.default(), i2 = function() {
        const { divider: t3, vertical: r3 } = e2;
        if ("object" == typeof t3 && null !== t3) {
          const e3 = r3 ? "horizontal" : "vertical";
          return g(b, { ...t3, direction: e3 });
        }
        return g("div", { class: "nue-div__divider" }, t3);
      }(), r2.reduce((e3, t3, n3) => (e3.push(t3), "symbol" != typeof t3.type && n3 !== r2.length - 1 && e3.push(i2), e3), []));
      return g("div", t2, o2);
    }
    var r2, i2;
    return g("div", t2, n2);
  };
} }));
export {
  m as N,
  b as a
};
