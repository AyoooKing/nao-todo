import { p as e, a as t, w as a } from "./utils-D3GAsA1N.js";
import { defineComponent as s, ref as l, watch as n, computed as i, openBlock as o, createBlock as r, resolveDynamicComponent as u, mergeProps as c, withCtx as d, unref as f, createCommentVNode as v, createElementVNode as m, renderSlot as p, createTextVNode as h, toDisplayString as k } from "vue";
import { N as b } from "./icon-DKepx2gf.js";
const x = { class: "nue-link__content" }, _ = a(s({ name: "NueLink", __name: "link", props: { href: {}, disabled: { type: Boolean }, icon: {}, route: {}, flex: {}, align: {}, size: {}, theme: {} }, setup(a2) {
  const s2 = a2, _2 = l("a"), y = l(), $ = l("");
  n(() => s2.route, (e2) => {
    e2 && (_2.value = "router-link", y.value = e2, $.value = "nue-link--actived");
  }, { immediate: true });
  const g = i(() => {
    let t2 = [];
    const { theme: a3, disabled: l2 } = s2, n2 = "nue-link";
    return t2.push(n2), a3 && (t2 = t2.concat(e(a3, n2))), l2 && t2.push(`${n2}--disabled`), t2;
  }), z = i(() => {
    const { flex: e2, align: a3, size: l2 } = s2;
    return { "--flex": e2 ? t(e2) : void 0, "--text-align": a3, "--font-size": l2 };
  });
  return (e2, t2) => (o(), r(u(e2.disabled ? "a" : _2.value), c({ "active-class": $.value, class: g.value, href: e2.disabled || !e2.href ? void 0 : e2.href, style: z.value, title: e2.href || void 0, to: y.value }, e2.$attrs), { default: d(() => [e2.icon ? (o(), r(f(b), { key: 0, name: e2.icon }, null, 8, ["name"])) : v("", true), m("span", x, [p(e2.$slots, "default", {}, () => [h(k(e2.href), 1)])]), p(e2.$slots, "append")]), _: 3 }, 16, ["active-class", "class", "href", "style", "title", "to"]));
} }));
export {
  _ as N
};
