export declare const NueDiv: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('vue').ExtractPropTypes<{
        direction: StringConstructor;
        vertical: BooleanConstructor;
        align: StringConstructor;
        justify: StringConstructor;
        flex: StringConstructor;
        wrap: StringConstructor;
        gap: StringConstructor;
        width: StringConstructor;
        height: StringConstructor;
        divider: {
            type: (BooleanConstructor | ObjectConstructor | StringConstructor | NumberConstructor)[];
            default: null;
        };
        theme: (ArrayConstructor | StringConstructor)[];
    }>> & Readonly<{}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
        [key: string]: any;
    }>, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        vertical: boolean;
        divider: string | number | boolean | Record<string, any>;
    }, true, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('vue').ExtractPropTypes<{
        direction: StringConstructor;
        vertical: BooleanConstructor;
        align: StringConstructor;
        justify: StringConstructor;
        flex: StringConstructor;
        wrap: StringConstructor;
        gap: StringConstructor;
        width: StringConstructor;
        height: StringConstructor;
        divider: {
            type: (BooleanConstructor | ObjectConstructor | StringConstructor | NumberConstructor)[];
            default: null;
        };
        theme: (ArrayConstructor | StringConstructor)[];
    }>> & Readonly<{}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
        [key: string]: any;
    }>, {}, {}, {}, {
        vertical: boolean;
        divider: string | number | boolean | Record<string, any>;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('vue').ExtractPropTypes<{
    direction: StringConstructor;
    vertical: BooleanConstructor;
    align: StringConstructor;
    justify: StringConstructor;
    flex: StringConstructor;
    wrap: StringConstructor;
    gap: StringConstructor;
    width: StringConstructor;
    height: StringConstructor;
    divider: {
        type: (BooleanConstructor | ObjectConstructor | StringConstructor | NumberConstructor)[];
        default: null;
    };
    theme: (ArrayConstructor | StringConstructor)[];
}>> & Readonly<{}>, () => import('vue').VNode<import('vue').RendererNode, import('vue').RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    vertical: boolean;
    divider: string | number | boolean | Record<string, any>;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
