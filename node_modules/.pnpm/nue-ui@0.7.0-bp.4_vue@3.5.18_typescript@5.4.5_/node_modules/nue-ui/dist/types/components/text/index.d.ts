export declare const NueText: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('vue').ExtractPropTypes<{
        size: {
            type: import('vue').PropType<string>;
        };
        tag: {
            type: import('vue').PropType<string>;
            default: string;
        };
        theme: {
            type: import('vue').PropType<string | string[]>;
        };
        color: {
            type: import('vue').PropType<string>;
        };
        align: {
            type: import('vue').PropType<string>;
        };
        decoration: {
            type: import('vue').PropType<string>;
        };
        weight: {
            type: import('vue').PropType<string | number>;
        };
        clamped: {
            type: import('vue').PropType<number>;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        tag: string;
    }, true, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('vue').ExtractPropTypes<{
        size: {
            type: import('vue').PropType<string>;
        };
        tag: {
            type: import('vue').PropType<string>;
            default: string;
        };
        theme: {
            type: import('vue').PropType<string | string[]>;
        };
        color: {
            type: import('vue').PropType<string>;
        };
        align: {
            type: import('vue').PropType<string>;
        };
        decoration: {
            type: import('vue').PropType<string>;
        };
        weight: {
            type: import('vue').PropType<string | number>;
        };
        clamped: {
            type: import('vue').PropType<number>;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, {
        tag: string;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('vue').ExtractPropTypes<{
    size: {
        type: import('vue').PropType<string>;
    };
    tag: {
        type: import('vue').PropType<string>;
        default: string;
    };
    theme: {
        type: import('vue').PropType<string | string[]>;
    };
    color: {
        type: import('vue').PropType<string>;
    };
    align: {
        type: import('vue').PropType<string>;
    };
    decoration: {
        type: import('vue').PropType<string>;
    };
    weight: {
        type: import('vue').PropType<string | number>;
    };
    clamped: {
        type: import('vue').PropType<number>;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    tag: string;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
