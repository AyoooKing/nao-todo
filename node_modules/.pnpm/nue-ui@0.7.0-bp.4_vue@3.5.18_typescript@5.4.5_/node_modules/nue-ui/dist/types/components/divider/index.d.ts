import { DividerPropsType } from './types';

export declare const NueDivider: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('vue').ExtractPropTypes<{
        text: {
            type: import('vue').PropType<string>;
        };
        align: {
            type: import('vue').PropType<"start" | "center" | "end">;
        };
        vertical: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
        direction: {
            type: import('vue').PropType<"vertical" | "horizontal">;
            default: string;
        };
        borderWidth: {
            type: import('vue').PropType<string>;
        };
        borderType: {
            type: import('vue').PropType<"solid" | "dashed" | "dotted">;
        };
        borderColor: {
            type: import('vue').PropType<string>;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        vertical: boolean;
        direction: "horizontal" | "vertical";
    }, true, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('vue').ExtractPropTypes<{
        text: {
            type: import('vue').PropType<string>;
        };
        align: {
            type: import('vue').PropType<"start" | "center" | "end">;
        };
        vertical: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
        direction: {
            type: import('vue').PropType<"vertical" | "horizontal">;
            default: string;
        };
        borderWidth: {
            type: import('vue').PropType<string>;
        };
        borderType: {
            type: import('vue').PropType<"solid" | "dashed" | "dotted">;
        };
        borderColor: {
            type: import('vue').PropType<string>;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, {
        vertical: boolean;
        direction: "horizontal" | "vertical";
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('vue').ExtractPropTypes<{
    text: {
        type: import('vue').PropType<string>;
    };
    align: {
        type: import('vue').PropType<"start" | "center" | "end">;
    };
    vertical: {
        type: import('vue').PropType<boolean>;
        default: boolean;
    };
    direction: {
        type: import('vue').PropType<"vertical" | "horizontal">;
        default: string;
    };
    borderWidth: {
        type: import('vue').PropType<string>;
    };
    borderType: {
        type: import('vue').PropType<"solid" | "dashed" | "dotted">;
    };
    borderColor: {
        type: import('vue').PropType<string>;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    vertical: boolean;
    direction: "horizontal" | "vertical";
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export type { DividerPropsType };
