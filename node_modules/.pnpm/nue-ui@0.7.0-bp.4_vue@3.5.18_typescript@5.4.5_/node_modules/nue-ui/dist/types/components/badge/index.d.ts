import { BadgePropsType } from './types';

export declare const NueBadge: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('vue').ExtractPropTypes<{
        theme: {
            type: import('vue').PropType<string | string[]>;
        };
        value: {
            type: import('vue').PropType<string | number>;
        };
        max: {
            type: import('vue').PropType<number>;
        };
        hidden: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
        dot: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        hidden: boolean;
        dot: boolean;
    }, true, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('vue').ExtractPropTypes<{
        theme: {
            type: import('vue').PropType<string | string[]>;
        };
        value: {
            type: import('vue').PropType<string | number>;
        };
        max: {
            type: import('vue').PropType<number>;
        };
        hidden: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
        dot: {
            type: import('vue').PropType<boolean>;
            default: boolean;
        };
    }>> & Readonly<{}>, {}, {}, {}, {}, {
        hidden: boolean;
        dot: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('vue').ExtractPropTypes<{
    theme: {
        type: import('vue').PropType<string | string[]>;
    };
    value: {
        type: import('vue').PropType<string | number>;
    };
    max: {
        type: import('vue').PropType<number>;
    };
    hidden: {
        type: import('vue').PropType<boolean>;
        default: boolean;
    };
    dot: {
        type: import('vue').PropType<boolean>;
        default: boolean;
    };
}>> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    hidden: boolean;
    dot: boolean;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export type { BadgePropsType };
